I thought that it would be better to write my make_parser in terms of the matcher because it seemed like we could use both rules of the derivation the same way. I think that this method makes for more concise and well written code. Although I ran out of time towards the end I realized that I would be able to write more robust code if I write my code in the manner that I chose. I made the functions that are used by both the parser and the tree return the same thing. This made it possible for me to have both the matcher and the parser use the same functions and maintained simplicity. Although it took me quite a while to figure out how to properly get the functions to return what I needed I eventually figured it out and I'm sure that it would've been much quicker than trying to re-write the other functions. This improves modularity of the code as well which is nicer when working on multiple different functions at the same time. My code's weakness is that it doesn't work with left recursive grammar. This is the biggest flaw in my code.